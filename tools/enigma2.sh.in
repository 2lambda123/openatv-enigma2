#!/bin/sh

prefix=@prefix@
datarootdir=@datarootdir@
datadir=@datadir@
libexecdir=@libexecdir@
sysconfdir=@sysconfdir@
bindir=@bindir@

# The enigma2 config directory will not exist on first boot
if [ ! -d ${sysconfdir}/enigma2 ]; then
	mkdir -p -m 755 ${sysconfdir}/enigma2
	cp -a ${datadir}/enigma2/defaults/* ${sysconfdir}/enigma2/
fi

if [ -x ${bindir}/showiframe ]; then
	if [ -f ${sysconfdir}/enigma2/backdrop.mvi ]; then
		${bindir}/showiframe ${sysconfdir}/enigma2/backdrop.mvi
	elif [ -f ${datadir}/backdrop.mvi ]; then
		${bindir}/showiframe ${datadir}/backdrop.mvi
	fi
fi

# if [ ! -f ${sysconfdir}/enigma2/pm_timers.xml ]; then
# 	cp -a ${datadir}/enigma2/defaults/pm_timers.xml ${sysconfdir}/enigma2/pm_timers.xml
# fi

#check if factory mode is present
if [ ! -f ${sysconfdir}/enigma2/settings ]; then
	cp -a ${datadir}/enigma2/defaults/* ${sysconfdir}/enigma2/
fi

if [ ! -f ${sysconfdir}/tuxbox/terrestrial.xml ]; then
	cp -a ${datadir}/enigma2/defaults/terrestrial.xml ${sysconfdir}/tuxbox/
fi

#check if Timezone for Australia is present
if [ ! -f ${sysconfdir}/tuxbox/timezone-aus.xml ]; then
	cp -a ${datadir}/enigma2/defaults/timezone-aus.xml ${sysconfdir}/tuxbox/timezone-aus.xml
fi

# hook to execute scripts always before enigma2 start
if [ -x ${bindir}/enigma2_pre_start.sh ]; then
	${bindir}/enigma2_pre_start.sh
fi

if [ -d /home/root ]; then
	cd /home/root
fi

#check for sundtek tuner helper lib
if [ -e /opt/lib/libmediaclient.so ]; then
	LIBS="/opt/lib/libmediaclient.so @libdir@/libopen.so.0.0.0"
else
	LIBS="@libdir@/libopen.so.0.0.0"
fi

sync
if [ "$(grep config.crash.enabledebug ${sysconfdir}/enigma2/settings)" == "config.crash.enabledebug=true" ]; then
	if [ "$(grep config.crash.debug_path= ${sysconfdir}/enigma2/settings | sed 's/config.crash.debug_path=//g')" != "" -a -d "$(grep config.crash.debug_path= ${sysconfdir}/enigma2/settings | sed 's/config.crash.debug_path=//g')" ]; then
		LD_PRELOAD=$LIBS ${bindir}/enigma2 &> $(grep config.crash.debug_path= ${sysconfdir}/enigma2/settings | sed 's/config.crash.debug_path=//g')Enigma2-$(date +%d-%m-%Y_%H-%M-%S).log
	else
		LD_PRELOAD=$LIBS ${bindir}/enigma2 &> /home/root/logs/Enigma2-$(date +%d-%m-%Y_%H-%M-%S).log
	fi
else
	LD_PRELOAD=$LIBS ${bindir}/enigma2
fi

# enigma2 exit codes:
#
# 1 - halt
# 2 - reboot
# 3 - restart enigma
#
# >128 signal

ret=$?
case $ret in
	1)
		/sbin/halt
		;;
	2)
		/sbin/reboot
		;;
	3)
		rm -fR /home/root/.gstreamer-0.10
		rm -f /tmp/.listen.camd.socket.ignore
		;;
	4)
		/sbin/rmmod lcd
		/usr/sbin/fpupgrade --upgrade 2>&1 | tee /home/root/fpupgrade.log
		sleep 1;
		/sbin/rmmod fp
		/sbin/modprobe fp
		/sbin/reboot
		;;
	42)
		python ${libexecdir}/python/upgrade.pyo
		;;
	43)
		init 1
		;;
	44)
		# little hack but it will be fixed soon in drivers
		${libexecdir}/python/Plugins/SystemPlugins/MICOMUpgrade/bin/fbclear && ${libexecdir}/python/Plugins/SystemPlugins/MICOMUpgrade/bin/fbclear && /usr/bin/showiframe ${libexecdir}/python/Plugins/SystemPlugins/MICOMUpgrade/wait.mvi && echo fpupload > /dev/dbox/oled0 && sleep 3 && cat /tmp/micom.bin > /dev/mcu && /usr/bin/showiframe ${libexecdir}/python/Plugins/SystemPlugins/MICOMUpgrade/reboot.mvi && sleep 200000
		;;
	*)
		rm -f /tmp/.listen.camd.socket.ignore
		;;
esac
